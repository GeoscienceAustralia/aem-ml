data:
    aem_folder: '/home/sudipta/Documents/new_datasets'
    aem_train_data: 'high_res_cond_clip_albers_skip_6.shp'
    aem_pred_data: 'high_res_cond_clip_albers_skip_6.shp'
    interp_data: 'interpretation_zone53_albers_study_area_Ceno_depth.shp'
    weight_col: 'BoundConf'
    line_col: 'SURVEY_LIN'
    conductivity_columns_prefix: 'cond'
    thickness_columns_prefix: 'thick'
    aem_covariate_cols:
        - 'ceno_euc_a'
        - 'Gravity_la'
        - 'national_W'
        - 'relief_ele'
        - 'relief_mrv'
        - 'SagaWET9ce'
        - 'elevation'
        - 'tx_height'
    test_train_split:
        train: 0.6
        val: 0.2
        test: 0.2
    rows: -1

# will run n_iter * cv number of jobs
# n_iter: Number of parameter settings that are sampled.
#n_jobs: int, default=1
#    Number of jobs to run in parallel. At maximum there are
#    ``n_points`` times ``cv`` jobs available during each iteration.
#
#n_points: int, default=1
#    Number of parameter settings to sample in parallel. If this does
#    not align with ``n_iter``, the last iteration will sample less
#    points.

learning:
    algorithm: randomforest
    params:
        criterion: 'mse'
        max_depth: 10
        n_estimators: 10
        max_samples: 0.5
        min_samples_split: 2
        min_samples_leaf: 2
        min_weight_fraction_leaf: 0.05
        max_features: "auto"
        n_jobs: -1
    weighted_model:
        weights:
            H: 2
            M: 1
            L: 0.5
    numpy_seed: 10
    include_aem_covariates: true
    include_thickness: true
    include_conductivity_derivatives: true
    optimisation:
        searchcv_params:
            n_iter: 6
            cv: 2
            verbose: 1000
            n_points: 3
            n_jobs: 6
        params_space:
            'max_depth': Integer(1, 15)
            'n_estimators': Integer(10, 100)
            'max_samples': Real(0.01, 1.0, prior='uniform')
            'max_features': Categorical(['auto', 'sqrt', 'log2'])
            'min_samples_split': Integer(2, 50)
            'min_samples_leaf': Integer(1, 50)
            'min_weight_fraction_leaf': Real(0.0, 0.5, prior='uniform')


output:
    directory: out
    train:
        covariates_csv: true
        true_vs_pred: true
        feature_ranking: true
    pred:
        quantiles: 0.95
        optimised_model: true
        covariates_csv: true
        pred: true
